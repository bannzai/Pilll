// Copyright 2014 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

pluginManagement {
	def flutterSdkPath = {
		def properties = new Properties()
		file("local.properties").withInputStream { properties.load(it) }
		def flutterSdkPath = properties.getProperty("flutter.sdk")
		assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
		return flutterSdkPath
	}()
	includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")
	repositories {
		google()
		mavenCentral()
		gradlePluginPortal()
	}
}

plugins {
	id "dev.flutter.flutter-plugin-loader" version "1.0.0"
	id "com.android.application" version "7.3.1" apply false
	id "org.jetbrains.kotlin.android" version "1.8.0" apply false
	id "com.google.gms.google-services" version "4.3.5" apply false
	id "com.google.firebase.crashlytics" version "2.9.9" apply false
}

include ':app'

def flutterProjectRoot = rootProject.projectDir.parentFile.toPath()

def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot.toFile(), '.flutter-plugins')
if (pluginsFile.exists()) {
	pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
}

plugins.each { name, path ->
	def pluginDirectory = flutterProjectRoot.resolve(path).resolve('android').toFile()
		include ":$name"
		project(":$name").projectDir = pluginDirectory
}
